<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on MingMoe的网络博客</title>
    <link>https://blog.kawayi.moe/categories/java/</link>
    <description>Recent content in java on MingMoe的网络博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 15 Jan 2022 22:16:02 +0800</lastBuildDate><atom:link href="https://blog.kawayi.moe/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java17新Native API初体验</title>
      <link>https://blog.kawayi.moe/2022/january/saturday/java17%E6%96%B0native-api%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sat, 15 Jan 2022 22:16:02 +0800</pubDate>
      
      <guid>https://blog.kawayi.moe/2022/january/saturday/java17%E6%96%B0native-api%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;p&gt;最近在使用Java编写程序，需要和c++进行交互。正好碰到了Java17新添加的Native API（类似JNI）。来自&lt;a href=&#34;https://openjdk.java.net/jeps/412&#34;&gt;JEP 412&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过编程配置log4j2</title>
      <link>https://blog.kawayi.moe/2021/november/saturday/%E9%80%9A%E8%BF%87%E7%BC%96%E7%A8%8B%E9%85%8D%E7%BD%AElog4j2/</link>
      <pubDate>Sat, 06 Nov 2021 00:23:14 +0800</pubDate>
      
      <guid>https://blog.kawayi.moe/2021/november/saturday/%E9%80%9A%E8%BF%87%E7%BC%96%E7%A8%8B%E9%85%8D%E7%BD%AElog4j2/</guid>
      <description>&lt;p&gt;最近在使用Log4j2的时候，碰到了一些问题：无论是使用&lt;code&gt;Configurator.initialize&lt;/code&gt;还是&lt;code&gt;LogManager.getContext().reconfigure()&lt;/code&gt;都无法完全更新log4j2的配置。&lt;/p&gt;
&lt;p&gt;在查看了Log4j2的源代码过后，笔者找到了解决方案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gradle代码片段总结</title>
      <link>https://blog.kawayi.moe/2021/october/sunday/gradle%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 31 Oct 2021 10:27:33 +0800</pubDate>
      
      <guid>https://blog.kawayi.moe/2021/october/sunday/gradle%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;汇总了一些gradle常用代码片段，包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;汇集所有子项目的javadoc&lt;/li&gt;
&lt;li&gt;汇集所有子项目的source/javadoc jar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于汇集所有依赖到同一个jar包里的，笔者依然是使用插件的方式(shadowJar)实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Netty Channel Init的handler添加顺序对程序的影响</title>
      <link>https://blog.kawayi.moe/2021/october/saturday/netty-channel-init%E7%9A%84handler%E6%B7%BB%E5%8A%A0%E9%A1%BA%E5%BA%8F%E5%AF%B9%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BD%B1%E5%93%8D/</link>
      <pubDate>Sat, 23 Oct 2021 15:07:52 +0800</pubDate>
      
      <guid>https://blog.kawayi.moe/2021/october/saturday/netty-channel-init%E7%9A%84handler%E6%B7%BB%E5%8A%A0%E9%A1%BA%E5%BA%8F%E5%AF%B9%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BD%B1%E5%93%8D/</guid>
      <description>&lt;!--TODO--&gt;
&lt;p&gt;今天在研究netty的时候，碰到了一个channel init的问题:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;NettyChannelInit&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ChannelInitializer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NioSocketChannel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initChannel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NioSocketChannel&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;socketChannel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socketChannel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;pipeline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;// 添加一个拆包器 (input)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addLast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;packet length parser&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LengthFieldBasedFrameDecoder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;c1&#34;&gt;// 丢弃长度
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;n&#34;&gt;4&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;// 添加一个包分类器 (input)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addLast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;packet classifier&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PacketClassifier&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;// 添加一些实际处理包的handle (input &amp;amp;&amp;amp; output)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addLast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;packet ping handle&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PingPacketHandle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;// 添加一个输出解码器 (output)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addLast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;output encoder&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PacketEncoder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
                &lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这段代码的依据 input-process-output 的handler逻辑顺序（即解码输入handler-逻辑handler-编码输出handler）来添加handler。这将会错误的工作。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
